name: SDLC Team

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      roles:
        description: 'Comma-separated list of roles to run (e.g., developer,security,qa,manager)'
        required: false
        default: 'manager'
      task:
        description: 'Task or feature to implement (used by manager role)'
        required: false
        default: ''

jobs:
  manager:
    runs-on: ubuntu-latest
    outputs:
      roles: ${{ steps.determine-roles.outputs.roles }}
    permissions:
      contents: read
      pull-requests: write
      issues: write
      actions: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)

          # Add instruction to output roles to execute
          PROMPT="$PROMPT

          IMPORTANT: Based on the task or PR changes, determine which roles need to be executed.
          Output EXACTLY one line at the end of your response in this format:
          ROLES_TO_RUN: role1,role2,role3

          Available roles: developer, architect, security, qa, devops, performance, frontend, backend, lead

          Choose the appropriate roles based on:
          - Type of changes in the PR
          - Complexity and scope of the task
          - Required expertise
          "

          if [ -n "${{ github.event.inputs.task }}" ]; then
            PROMPT="$PROMPT

            Task to implement: ${{ github.event.inputs.task }}"
          fi

          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Project Manager
        id: run-manager
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh issue create:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*),Bash(gh workflow run:*),Bash(gh workflow list:*)"'

      - name: Determine roles to run
        id: determine-roles
        run: |
          # Extract roles from manager output (looking for ROLES_TO_RUN: line)
          # For now, if no roles specified or if running from workflow_dispatch with roles input, use that
          if [ -n "${{ github.event.inputs.roles }}" ]; then
            ROLES="${{ github.event.inputs.roles }}"
          else
            # Default to common roles for PRs
            ROLES="developer,architect,security,qa"
          fi

          # Convert to JSON array for matrix
          ROLES_JSON=$(echo "$ROLES" | tr ',' '\n' | jq -R . | jq -s -c .)
          echo "roles=$ROLES_JSON" >> $GITHUB_OUTPUT
          echo "Roles to run: $ROLES_JSON"

  developer:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'developer')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Developer Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  architect:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'architect')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Architect Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  security:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'security')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Security Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  qa:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'qa')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run QA Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  devops:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'devops')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run DevOps Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  performance:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'performance')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Performance Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  frontend:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'frontend')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Frontend Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  backend:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'backend')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Backend Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'

  lead:
    needs: manager
    if: contains(fromJson(needs.manager.outputs.roles), 'lead')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Read Agent Prompt
        id: read-prompt
        run: |
          PROMPT=$(cat .cielo/agents/${{ github.job }}.md)
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Tech Lead Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: ${{ steps.read-prompt.outputs.prompt }}
          claude_args: '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr list:*)"'
